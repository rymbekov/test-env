name: Build Docker image

on:
  release:
    types: [published]

env:
  GIT_TAG: ${{ github.event.release.tag_name}}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
   check_tag:
     runs-on: ubuntu-latest
     outputs:
       run_other_jobs: ${{ steps.check-tag.outputs.result }}
     steps:
        - name: check tag ${{ github.ref }}
          id: check-tag
          uses: actions/github-script@v5
          with:
            result-encoding: string
            script: |
             const pattern = new RegExp('^[0-9]+\.[0-9]+\.[0-9]+(-(?!npm).+)*$')
             const tag = process.env.GIT_TAG
             console.log(tag)
             if (pattern.test(tag)) {
                 return "true"
             } else {
                 return "false"
             }
            
   Build:
     name: Build Docker image
     needs: [check_tag]
     if: needs.check_tag.outputs.run_other_jobs == 'true'
     runs-on: ubuntu-20.04
     steps:
        - uses: actions/checkout@v3
        # - name: Use node.js 14
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: '14'
        #     cache: 'npm'
        #     registry-url: 'https://registry.npmjs.org'
        #   env:
        #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Build docker image for service
          run: ./scripts/build.sh test $GIT_TAG true
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          if: always()
          run: |
            if [[ job.status }} == success ]]; then
                echo "SLACK_MESSAGE='üì¶ Docker image *${{ env.REPO_NAME }}@${{ env.GIT_TAG }}* created! (by ${{ github.actor }})!'" >> $GITHUB_ENV
            else
                echo "SLACK_MESSAGE=':–∫—Ä–∞—Å–Ω—ã–π_–∫—Ä—É–≥: A Build Docker Image job has failed!'" >> $GITHUB_ENV
            fi
          env:
            SLACK_CHANNEL: es-test
            SLACK_COLOR: ${{ job.status }}
            SLACK_TITLE: 'Project: ${{ env.REPO_NAME }}'
            # SLACK_MESSAGE: 'üì¶ Docker image *${{ env.REPO_NAME }}@${{ env.GIT_TAG }}* created! (by ${{ github.actor }})!'
            SLACK_USERNAME: GitHub Action Releases
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            MSG_MINIMAL: actions,commit
            # :–∫—Ä–∞—Å–Ω—ã–π_–∫—Ä—É–≥: A Build Container job has failed!